#!/usr/bin/bash

# Function to show usage
usage() {
    echo "Usage: $0 [-a] [-v] source_file [program_arguments...]"
    echo "  -a: Compile with dependencies (*.c)"
    echo "  -v: Compile with valgrind (cc -g3 && valgrind ./exec)"
    exit 1
}

# Check if no arguments are provided
if [ $# -lt 1 ]; then
    usage
fi

# Initialize variables
compile_with_dependencies=false
compile_with_valgrind=false
source_file=""

# Parse options
while getopts ":av" opt; do
    case ${opt} in
        a )
            compile_with_dependencies=true
            ;;
		v )
            compile_with_valgrind=true
            ;;
        \? )
            usage
            ;;
    esac
done

# Remove parsed options from positional parameters
shift $((OPTIND -1))

# Check if the source file is provided
if [ $# -lt 1 ]; then
    usage
else
    source_file=$1
    shift
fi

# Compile the source file
if $compile_with_dependencies; then
    cc -Wall -Werror -Wextra -o exec *.c
elif $compile_with_valgrind; then
    cc -Wall -Werror -Wextra -o exec -g3 "$source_file"
else
    cc -Wall -Werror -Wextra -o exec "$source_file"
fi

# Run the compiled program with the remaining arguments (if any)
if $compile_with_valgrind; then
    valgrind --leak-check=full --show-leak-kinds=all ./exec "$@"
else
./exec "$@"
fi

# Clean up by removing the executable
rm exec
